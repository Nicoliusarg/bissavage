name: Update BiS feed
on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"
permissions:
  contents: write
concurrency:
  group: update-bis
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install deps
        run: |
          npm ci || npm install --no-fund --no-audit

      - name: Debug WCL zones
        env:
          WCL_CLIENT_ID: ${{ secrets.WCL_CLIENT_ID }}
          WCL_CLIENT_SECRET: ${{ secrets.WCL_CLIENT_SECRET }}
        run: |
          node -e "const UA='bissavage/1.0';(async()=>{try{if(!process.env.WCL_CLIENT_ID||!process.env.WCL_CLIENT_SECRET){console.log('WCL secrets vacíos: salteando');process.exit(0)};const p=new URLSearchParams({grant_type:'client_credentials',client_id:process.env.WCL_CLIENT_ID,client_secret:process.env.WCL_CLIENT_SECRET});const rt=await fetch('https://www.warcraftlogs.com/oauth/token',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded','User-Agent':UA},body:p});const tok=await rt.json();if(!tok.access_token){console.log('No token');process.exit(0)};const q='query{ worldData { zones { id name encounters { id name } } } }';const rq=await fetch('https://www.warcraftlogs.com/api/v2/client',{method:'POST',headers:{'Content-Type':'application/json','Authorization':'Bearer '+tok.access_token,'User-Agent':UA},body:JSON.stringify({query:q,variables:{}})});const data=await rq.json();const zones=(data?.data?.worldData?.zones||[]).filter(z=>(z.encounters||[]).length>0).sort((a,b)=>b.id-a.id);console.log('=== ZONAS CON BOSSES (zoneId — nombre — #encounters) ===');for(const z of zones){console.log(z.id+' — '+z.name+' — '+z.encounters.length)};console.log('TIP: setea WCL_RAID_ZONE_ID con el id del tier actual.');}catch(e){console.log('debug error:',e.message)}})();"

      - name: Build BiS feed automatically (WCL)
        run: "npm run auto:wcl"
        env:
          WCL_CLIENT_ID: ${{ secrets.WCL_CLIENT_ID }}
          WCL_CLIENT_SECRET: ${{ secrets.WCL_CLIENT_SECRET }}
          # WCL_RAID_ZONE_ID: "99999"
          WCL_RAID_DIFFICULTY: "4"
          WCL_TOP_PAGES: "1"
          WCL_TIMEFRAME: Historical
          WCL_REQ_DELAY_MS: "400"

      - name: Build icons (static, no API)
        run: "npm run icons"

      - name: Validate feed
        run: |
          node -e "const fs=require('fs');const f=JSON.parse(fs.readFileSync('bis-feed.json','utf8'));if(!f||!f.data||!Object.keys(f.data).length){console.error('Feed vacío o sin data');process.exit(1)};for(const c of Object.keys(f.data)){for(const s of Object.keys(f.data[c])){if(!Array.isArray(f.data[c][s])){console.error('Spec no es array:',c,s);process.exit(1)}}}}"
          test -f bis-feed.js && echo "bis-feed.js OK"
          test -f wow-icons.js && echo "wow-icons.js OK"

      - name: Rebase against latest main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git pull --rebase origin main

      - name: Commit updated feed & icons
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update BiS (WCL) & icons [skip ci]"
          file_pattern: "bis-feed.json bis-feed.js wow-icons.js"
